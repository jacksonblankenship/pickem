/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UpdatePasswordRouteImport } from './routes/update-password'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as PicksRouteImport } from './routes/picks'
import { Route as CreateAccountRouteImport } from './routes/create-account'
import { Route as IndexRouteImport } from './routes/index'

const UpdatePasswordRoute = UpdatePasswordRouteImport.update({
  id: '/update-password',
  path: '/update-password',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const PicksRoute = PicksRouteImport.update({
  id: '/picks',
  path: '/picks',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateAccountRoute = CreateAccountRouteImport.update({
  id: '/create-account',
  path: '/create-account',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create-account': typeof CreateAccountRoute
  '/picks': typeof PicksRoute
  '/reset-password': typeof ResetPasswordRoute
  '/sign-in': typeof SignInRoute
  '/update-password': typeof UpdatePasswordRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create-account': typeof CreateAccountRoute
  '/picks': typeof PicksRoute
  '/reset-password': typeof ResetPasswordRoute
  '/sign-in': typeof SignInRoute
  '/update-password': typeof UpdatePasswordRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/create-account': typeof CreateAccountRoute
  '/picks': typeof PicksRoute
  '/reset-password': typeof ResetPasswordRoute
  '/sign-in': typeof SignInRoute
  '/update-password': typeof UpdatePasswordRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create-account'
    | '/picks'
    | '/reset-password'
    | '/sign-in'
    | '/update-password'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create-account'
    | '/picks'
    | '/reset-password'
    | '/sign-in'
    | '/update-password'
  id:
    | '__root__'
    | '/'
    | '/create-account'
    | '/picks'
    | '/reset-password'
    | '/sign-in'
    | '/update-password'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateAccountRoute: typeof CreateAccountRoute
  PicksRoute: typeof PicksRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignInRoute: typeof SignInRoute
  UpdatePasswordRoute: typeof UpdatePasswordRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/update-password': {
      id: '/update-password'
      path: '/update-password'
      fullPath: '/update-password'
      preLoaderRoute: typeof UpdatePasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/picks': {
      id: '/picks'
      path: '/picks'
      fullPath: '/picks'
      preLoaderRoute: typeof PicksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create-account': {
      id: '/create-account'
      path: '/create-account'
      fullPath: '/create-account'
      preLoaderRoute: typeof CreateAccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateAccountRoute: CreateAccountRoute,
  PicksRoute: PicksRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignInRoute: SignInRoute,
  UpdatePasswordRoute: UpdatePasswordRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
